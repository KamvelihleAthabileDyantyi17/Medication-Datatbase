-- Create MEDICATION table
CREATE TABLE MEDICATION (
    MEDICATION_ID int PRIMARY KEY,
    MEDICATION_NAME varchar(100) NOT NULL,
    MEDICATION_CATEGORY_ID int NOT NULL,

-- foreign key
    FOREIGN KEY (MEDICATION_CATEGORY_ID) REFERENCES MEDICATION_CATEGORY(MEDICATION_CATEGORY_ID)
);

-- Create MEDICATION_CATEGORY table
CREATE TABLE MEDICATION_CATEGORY (
    MEDICATION_CATEGORY_ID int PRIMARY KEY,
    MEDICATION_CATEGORY_DESCRIPTION varchar(100) NOT NULL
);

-- Create ACTIVE_INGREDIENT table
CREATE TABLE ACTIVE_INGREDIENT (
    ACTIVE_INGREDIENT_ID int PRIMARY KEY,
    ACTIVE_INGREDIENT_NAME varchar(100) NOT NULL,
    INGREDIENT_CATEGORY_ID int NOT NULL,
    -- foreign key
    FOREIGN KEY (INGREDIENT_CATEGORY_ID) REFERENCES INGREDIENT_CATEGORY(INGREDIENT_CATEGORY_ID)
);

-- Create INGREDIENT_CATEGORY table
CREATE TABLE INGREDIENT_CATEGORY (
    INGREDIENT_CATEGORY_ID int PRIMARY KEY,
    INGREDIENT_CATEGORY_DESCRIPTION varchar(100) NOT NULL
);

-- Create MEDICATION_ACTIVE_INGREDIENT junction table (handles many-to-many relationship)
CREATE TABLE MEDICATION_ACTIVE_INGREDIENT (
    MEDICATION_ACTIVE_INGREDIENT_ID int PRIMARY KEY,
    MEDICATION_ID int NOT NULL,
    ACTIVE_INGREDIENT_ID int NOT NULL,
    QUANTITY DECIMAL(10, 2) NOT NULL,  -- Tracks quantity per ingredient per medication
    -- foreign keys
    FOREIGN KEY (MEDICATION_ID) REFERENCES MEDICATION(MEDICATION_ID),
    FOREIGN KEY (ACTIVE_INGREDIENT_ID) REFERENCES ACTIVE_INGREDIENT(ACTIVE_INGREDIENT_ID)
);
